package io.github.isan95.masivtest.db.tables.pojos;
import java.io.Serializable;
import javax.annotation.Generated;
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roulette implements Serializable {
    private static final long serialVersionUID = -798468119;
    private Long    id;
    private String  state;
    private Integer customer;
    private Double  betAmount;
    private String  betNumberOrColor;
    private String  winningNumberOrColor;
    private Double  earnedMoney;
    public Roulette() {}
    public Roulette(Roulette value) {
        this.id = value.id;
        this.state = value.state;
        this.customer = value.customer;
        this.betAmount = value.betAmount;
        this.betNumberOrColor = value.betNumberOrColor;
        this.winningNumberOrColor = value.winningNumberOrColor;
        this.earnedMoney = value.earnedMoney;
    }
    public Roulette(
        Long    id,
        String  state,
        Integer customer,
        Double  betAmount,
        String  betNumberOrColor,
        String  winningNumberOrColor,
        Double  earnedMoney
    ) {
        this.id = id;
        this.state = state;
        this.customer = customer;
        this.betAmount = betAmount;
        this.betNumberOrColor = betNumberOrColor;
        this.winningNumberOrColor = winningNumberOrColor;
        this.earnedMoney = earnedMoney;
    }
    public Long getId() {
        return this.id;
    }
    public void setId(Long id) {
        this.id = id;
    }
    public String getState() {
        return this.state;
    }
    public void setState(String state) {
        this.state = state;
    }
    public Integer getCustomer() {
        return this.customer;
    }
    public void setCustomer(Integer customer) {
        this.customer = customer;
    }
    public Double getBetAmount() {
        return this.betAmount;
    }
    public void setBetAmount(Double betAmount) {
        this.betAmount = betAmount;
    }
    public String getBetNumberOrColor() {
        return this.betNumberOrColor;
    }
    public void setBetNumberOrColor(String betNumberOrColor) {
        this.betNumberOrColor = betNumberOrColor;
    }
    public String getWinningNumberOrColor() {
        return this.winningNumberOrColor;
    }
    public void setWinningNumberOrColor(String winningNumberOrColor) {
        this.winningNumberOrColor = winningNumberOrColor;
    }
    public Double getEarnedMoney() {
        return this.earnedMoney;
    }
    public void setEarnedMoney(Double earnedMoney) {
        this.earnedMoney = earnedMoney;
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Roulette other = (Roulette) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        if (customer == null) {
            if (other.customer != null)
                return false;
        }
        else if (!customer.equals(other.customer))
            return false;
        if (betAmount == null) {
            if (other.betAmount != null)
                return false;
        }
        else if (!betAmount.equals(other.betAmount))
            return false;
        if (betNumberOrColor == null) {
            if (other.betNumberOrColor != null)
                return false;
        }
        else if (!betNumberOrColor.equals(other.betNumberOrColor))
            return false;
        if (winningNumberOrColor == null) {
            if (other.winningNumberOrColor != null)
                return false;
        }
        else if (!winningNumberOrColor.equals(other.winningNumberOrColor))
            return false;
        if (earnedMoney == null) {
            if (other.earnedMoney != null)
                return false;
        }
        else if (!earnedMoney.equals(other.earnedMoney))
            return false;
        return true;
    }
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.customer == null) ? 0 : this.customer.hashCode());
        result = prime * result + ((this.betAmount == null) ? 0 : this.betAmount.hashCode());
        result = prime * result + ((this.betNumberOrColor == null) ? 0 : this.betNumberOrColor.hashCode());
        result = prime * result + ((this.winningNumberOrColor == null) ? 0 : this.winningNumberOrColor.hashCode());
        result = prime * result + ((this.earnedMoney == null) ? 0 : this.earnedMoney.hashCode());
        return result;
    }
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Roulette (");
        sb.append(id);
        sb.append(", ").append(state);
        sb.append(", ").append(customer);
        sb.append(", ").append(betAmount);
        sb.append(", ").append(betNumberOrColor);
        sb.append(", ").append(winningNumberOrColor);
        sb.append(", ").append(earnedMoney);
        sb.append(")");
        return sb.toString();
    }
}
