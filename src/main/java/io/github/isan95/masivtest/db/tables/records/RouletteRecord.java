package io.github.isan95.masivtest.db.tables.records;
import io.github.isan95.masivtest.db.tables.Roulette;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouletteRecord extends UpdatableRecordImpl<RouletteRecord> implements Record7<Long, String, Integer, Double, String, String, Double> {
    private static final long serialVersionUID = -76997389;
    public void setId(Long value) {
        set(0, value);
    }
    public Long getId() {
        return (Long) get(0);
    }
    public void setState(String value) {
        set(1, value);
    }
    public String getState() {
        return (String) get(1);
    }
    public void setCustomer(Integer value) {
        set(2, value);
    }
    public Integer getCustomer() {
        return (Integer) get(2);
    }
    public void setBetAmount(Double value) {
        set(3, value);
    }
    public Double getBetAmount() {
        return (Double) get(3);
    }
    public void setBetNumberOrColor(String value) {
        set(4, value);
    }
    public String getBetNumberOrColor() {
        return (String) get(4);
    }
    public void setWinningNumberOrColor(String value) {
        set(5, value);
    }
    public String getWinningNumberOrColor() {
        return (String) get(5);
    }
    public void setEarnedMoney(Double value) {
        set(6, value);
    }
    public Double getEarnedMoney() {
        return (Double) get(6);
    }
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }
    @Override
    public Row7<Long, String, Integer, Double, String, String, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
    @Override
    public Row7<Long, String, Integer, Double, String, String, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }
    @Override
    public Field<Long> field1() {
        return Roulette.ROULETTE.ID;
    }
    @Override
    public Field<String> field2() {
        return Roulette.ROULETTE.STATE;
    }
    @Override
    public Field<Integer> field3() {
        return Roulette.ROULETTE.CUSTOMER;
    }
    @Override
    public Field<Double> field4() {
        return Roulette.ROULETTE.BET_AMOUNT;
    }
    @Override
    public Field<String> field5() {
        return Roulette.ROULETTE.BET_NUMBER_OR_COLOR;
    }
    @Override
    public Field<String> field6() {
        return Roulette.ROULETTE.WINNING_NUMBER_OR_COLOR;
    }
    @Override
    public Field<Double> field7() {
        return Roulette.ROULETTE.EARNED_MONEY;
    }
    @Override
    public Long component1() {
        return getId();
    }
    @Override
    public String component2() {
        return getState();
    }
    @Override
    public Integer component3() {
        return getCustomer();
    }
    @Override
    public Double component4() {
        return getBetAmount();
    }
    @Override
    public String component5() {
        return getBetNumberOrColor();
    }
    @Override
    public String component6() {
        return getWinningNumberOrColor();
    }
    @Override
    public Double component7() {
        return getEarnedMoney();
    }
    @Override
    public Long value1() {
        return getId();
    }
    @Override
    public String value2() {
        return getState();
    }
    @Override
    public Integer value3() {
        return getCustomer();
    }
    @Override
    public Double value4() {
        return getBetAmount();
    }
    @Override
    public String value5() {
        return getBetNumberOrColor();
    }
    @Override
    public String value6() {
        return getWinningNumberOrColor();
    }
    @Override
    public Double value7() {
        return getEarnedMoney();
    }
    @Override
    public RouletteRecord value1(Long value) {
        setId(value);
        return this;
    }
    @Override
    public RouletteRecord value2(String value) {
        setState(value);
        return this;
    }
    @Override
    public RouletteRecord value3(Integer value) {
        setCustomer(value);
        return this;
    }
    @Override
    public RouletteRecord value4(Double value) {
        setBetAmount(value);
        return this;
    }
    @Override
    public RouletteRecord value5(String value) {
        setBetNumberOrColor(value);
        return this;
    }
    @Override
    public RouletteRecord value6(String value) {
        setWinningNumberOrColor(value);
        return this;
    }
    @Override
    public RouletteRecord value7(Double value) {
        setEarnedMoney(value);
        return this;
    }
    @Override
    public RouletteRecord values(Long value1, String value2, Integer value3, Double value4, String value5, String value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }
    public RouletteRecord() {
        super(Roulette.ROULETTE);
    }
    public RouletteRecord(Long id, String state, Integer customer, Double betAmount, String betNumberOrColor, String winningNumberOrColor, Double earnedMoney) {
        super(Roulette.ROULETTE);
        set(0, id);
        set(1, state);
        set(2, customer);
        set(3, betAmount);
        set(4, betNumberOrColor);
        set(5, winningNumberOrColor);
        set(6, earnedMoney);
    }
}